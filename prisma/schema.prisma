// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  folderId  Int
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  url       String?
  size      Int
  createdAt DateTime @default(now()) @map("created_at")

  @@unique([folderId, name])
}

model Folder {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(255)
  parentFolderId Int?     @map("parent_folder_id")
  parent         Folder?  @relation("FolderToFolder", fields: [parentFolderId], references: [id], onDelete: Cascade)
  children       Folder[] @relation("FolderToFolder")
  File           File[]
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int      @map("user_id")

  @@unique([parentFolderId, name])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String   @map("first_name") @db.VarChar(255)
  lastName  String   @map("last_name") @db.VarChar(255)
  password  String   @db.VarChar(255)
  Folder    Folder[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
